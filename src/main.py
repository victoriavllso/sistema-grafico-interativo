# Form implementation generated from reading ui file 'gui/main_window.ui'
#
# Created by: PyQt6 UI code generator 6.8.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from display_file import Display_File
from window import Window
from viewport import Viewport

from point import Point
from line import Line
from wireframe import Wireframe

from utils import *

from PyQt6 import QtCore, QtGui, QtWidgets

# ---------- Generated code from main_window.ui ---------- #
class Ui_main(object):
    def setupUi(self, main):
        main.setObjectName("main")
        main.resize(925, 672)
        self.centralwidget = QtWidgets.QWidget(parent=main)
        self.centralwidget.setObjectName("centralwidget")
        self.down = QtWidgets.QPushButton(parent=self.centralwidget)
        self.down.setGeometry(QtCore.QRect(755, 540, 101, 32))
        self.down.setObjectName("down")
        self.right = QtWidgets.QPushButton(parent=self.centralwidget)
        self.right.setGeometry(QtCore.QRect(820, 510, 101, 32))
        self.right.setObjectName("right")
        self.left = QtWidgets.QPushButton(parent=self.centralwidget)
        self.left.setGeometry(QtCore.QRect(690, 510, 101, 32))
        self.left.setObjectName("left")
        self.up = QtWidgets.QPushButton(parent=self.centralwidget)
        self.up.setGeometry(QtCore.QRect(755, 480, 101, 32))
        self.up.setObjectName("up")
        self.graphicsView = QtWidgets.QGraphicsView(parent=self.centralwidget)
        self.graphicsView.setGeometry(QtCore.QRect(0, 0, 680, 620))
        self.graphicsView.setObjectName("graphicsView")
        self.s_in = QtWidgets.QPushButton(parent=self.centralwidget)
        self.s_in.setGeometry(QtCore.QRect(690, 580, 101, 32))
        self.s_in.setObjectName("in")
        self.s_out = QtWidgets.QPushButton(parent=self.centralwidget)
        self.s_out.setGeometry(QtCore.QRect(820, 580, 101, 32))
        self.s_out.setObjectName("out")
        self.listView = QtWidgets.QListView(parent=self.centralwidget)
        self.listView.setGeometry(QtCore.QRect(700, 0, 220, 350))
        self.listView.setObjectName("listView")
        self.create_but = QtWidgets.QPushButton(parent=self.centralwidget)
        self.create_but.setGeometry(QtCore.QRect(690, 380, 101, 32))
        self.create_but.setObjectName("create_but")
        self.delete_but = QtWidgets.QPushButton(parent=self.centralwidget)
        self.delete_but.setGeometry(QtCore.QRect(820, 380, 101, 32))
        self.delete_but.setObjectName("delete_but")
        self.objetc_lbl = QtWidgets.QLabel(parent=self.centralwidget)
        self.objetc_lbl.setGeometry(QtCore.QRect(780, 360, 58, 16))
        self.objetc_lbl.setObjectName("objetc_lbl")
        self.create_line = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.create_line.setGeometry(QtCore.QRect(690, 410, 101, 21))
        self.create_line.setObjectName("create_line")
        self.delete_line = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.delete_line.setGeometry(QtCore.QRect(822, 410, 101, 21))
        self.delete_line.setObjectName("delete_line")
        self.create_exp = QtWidgets.QLabel(parent=self.centralwidget)
        self.create_exp.setGeometry(QtCore.QRect(700, 440, 71, 16))
        self.create_exp.setObjectName("create_exp")
        self.delete_exp = QtWidgets.QLabel(parent=self.centralwidget)
        self.delete_exp.setGeometry(QtCore.QRect(830, 440, 58, 16))
        self.delete_exp.setObjectName("delete_exp")
        main.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=main)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 925, 24))
        self.menubar.setObjectName("menubar")
        self.menuOptions = QtWidgets.QMenu(parent=self.menubar)
        self.menuOptions.setObjectName("menuOptions")
        main.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=main)
        self.statusbar.setObjectName("statusbar")
        main.setStatusBar(self.statusbar)
        self.actionRestart = QtGui.QAction(parent=main)
        self.actionRestart.setObjectName("actionRestart")
        self.menuOptions.addAction(self.actionRestart)
        self.menubar.addAction(self.menuOptions.menuAction())

        self.retranslateUi(main)
        QtCore.QMetaObject.connectSlotsByName(main)

    def retranslateUi(self, main):
        _translate = QtCore.QCoreApplication.translate
        main.setWindowTitle(_translate("main", "MainWindow"))
        self.down.setText(_translate("main", "Down"))
        self.right.setText(_translate("main", "Right"))
        self.left.setText(_translate("main", "Left"))
        self.up.setText(_translate("main", "Up"))
        self.s_in.setText(_translate("main", "In"))
        self.s_out.setText(_translate("main", "Out"))
        self.create_but.setText(_translate("main", "Create"))
        self.delete_but.setText(_translate("main", "Delete"))
        self.objetc_lbl.setText(_translate("main", "Object:"))
        self.create_exp.setText(_translate("main", "(1, 2) , (2, 4)"))
        self.delete_exp.setText(_translate("main", "line1"))
        self.menuOptions.setTitle(_translate("main", "Options"))
        self.actionRestart.setText(_translate("main", "Restart"))

# ---------- Generated code from main_window.ui ---------- #

class MainWindow(QtWidgets.QMainWindow, Ui_main):
    def __init__(self):
        super().__init__()
        self.setupUi(self)
        self.initUI()
    
    # Connect signals to slots
    def initUI(self):
        self.display_file = Display_File()
        self.viewport = Viewport()
        self.window = Window()

        self.create_but.clicked.connect(self.create_object)
        self.delete_but.clicked.connect(self.delete_object)
        self.up.clicked.connect(self.move_window_up)
        self.down.clicked.connect(self.move_window_down)
        self.left.clicked.connect(self.move_window_left)
        self.right.clicked.connect(self.move_window_right)
        self.s_in.clicked.connect(self.zoom_in)
        self.s_out.clicked.connect(self.zoom_out)

    # Create object from input
    def create_object(self):
        # Input
        text = self.create_line.text().strip()
        if not text:
            return
        
        # "(x1, y1), (x2, y2)"
        points = [tuple(map(int, p.strip("() ").split(","))) for p in text.split(" , ")]

        # Generic name
        name = f"object{len(self.display_file.get_all())}"
        
        # Decide which object to create
        if len(points) == 1:
            obj = Point(name, *points[0])
        elif len(points) == 2:
            obj = Line(name, *points[0], *points[1])
        else:
            obj = Wireframe(name, points)

        # Add object to display file and update viewport
        self.display_file.add(obj)
        self.update_viewport()

    # Delete object from display file
    def delete_object(self):
        obj_name = self.delete_line.text().strip()
        self.display_file.remove(obj_name)
        self.update_viewport()

    # Move window up
    def move_window_up(self):
        self.window.up()
        self.update_viewport()
    
    # Move window down
    def move_window_down(self):
        self.window.down()
        self.update_viewport()

    # Move window left
    def move_window_left(self):
        self.window.left()
        self.update_viewport()

    # Move window right
    def move_window_right(self):
        self.window.right()
        self.update_viewport

    # Zoom in
    def zoom_in(self):
        self.window.z_in()
        self.update_viewport()

    # Zoom out
    def zoom_out(self):
        self.window.z_out()
        self.update_viewport()

    # Update viewport
    def update_viewport(self):
        self.graphicsView.scene().clear()
        for obj in self.display_file.get_all():
            obj.draw(self.graphicsView.scene())

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    window = MainWindow()
    window.show()
    sys.exit(app.exec())
